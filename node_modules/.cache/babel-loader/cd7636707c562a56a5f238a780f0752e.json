{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\weather_app\\\\src\\\\components\\\\Forecast\\\\forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Conditions from '../Conditions/conditions';\nimport classes from './forecast.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecast = () => {\n  _s();\n\n  let [city, setCity] = useState('');\n  let [unit, setUnit] = useState('metric');\n  let [responseObj, setResponseObj] = useState({});\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false);\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com',\n        'X-RapidAPI-Key': 'f64860b1eamshb8bc6b75db45977p1fb324jsn07d032ea121c'\n      }\n    };\n    fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, options).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    }).catch(err => console.error(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Current Weather Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getForecast,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        maxLength: \"50\",\n        className: classes.textInput,\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes.Radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"units\",\n          checked: unit === \"imperial\",\n          value: \"imperial\",\n          onChange: e => setUnit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), \"Fahrenheit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes.Radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"units\",\n          checked: unit === \"metric\",\n          value: \"metric\",\n          onChange: e => setUnit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), \"Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.Button,\n        type: \"submit\",\n        children: \"Get Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Conditions, {\n      responseObj: responseObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forecast, \"9ZCxGgDKZBWe8BcS+65oldIVumM=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","Conditions","classes","Forecast","city","setCity","unit","setUnit","responseObj","setResponseObj","error","setError","loading","setLoading","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","options","method","headers","fetch","then","response","json","catch","err","console","textInput","target","value","Radio","Button"],"sources":["C:/Users/Asus/Documents/GitHub/weather_app/src/components/Forecast/forecast.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Conditions from '../Conditions/conditions';\r\nimport classes from './forecast.module.css';\r\n\r\nconst Forecast = () => {\r\n    let [city, setCity] = useState('');\r\n    let [unit, setUnit] = useState('metric');\r\n    let [responseObj, setResponseObj] = useState({});\r\n    let [error, setError] = useState(false);\r\n    let [loading, setLoading] = useState(false);\r\n\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n\r\n    function getForecast(e) {\r\n        e.preventDefault();\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com',\r\n                'X-RapidAPI-Key': 'f64860b1eamshb8bc6b75db45977p1fb324jsn07d032ea121c'\r\n            }\r\n        };\r\n\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, options)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setResponseObj(response)\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Find Current Weather Conditions</h2>\r\n            <form onSubmit={getForecast}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter City\"\r\n                    maxLength=\"50\"\r\n                    className={classes.textInput}\r\n                    value={city}\r\n                    onChange={(e) =>\r\n                        setCity(e.target.value)}\r\n                />\r\n                <label className={classes.Radio}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"units\"\r\n                        checked={unit === \"imperial\"}\r\n                        value=\"imperial\"\r\n                        onChange={(e) =>\r\n                            setUnit(e.target.value)}\r\n                    />\r\n                    Fahrenheit\r\n                </label>\r\n                <label className={classes.Radio}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"units\"\r\n                        checked={unit === \"metric\"}\r\n                        value=\"metric\"\r\n                        onChange={(e) =>\r\n                            setUnit(e.target.value)}\r\n                    />\r\n                    Celcius\r\n                </label> <button className={classes.Button} type='submit'>Get Forecast</button>\r\n            </form>\r\n            <Conditions\r\n                responseObj={responseObj}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast;"],"mappings":"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"},"metadata":{},"sourceType":"module"}