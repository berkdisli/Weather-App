{"ast":null,"code":"import _slicedToArray from\"C:/Users/Asus/Documents/GitHub/weather_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Conditions from'../Conditions/conditions';import classes from'./forecast.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Forecast=function Forecast(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState('metric'),_useState4=_slicedToArray(_useState3,2),unit=_useState4[0],setUnit=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),responseObj=_useState6[0],setResponseObj=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var uriEncodedCity=encodeURIComponent(city);function getForecast(e){e.preventDefault();if(city.length===0){return setError(true);}setError(false);setResponseObj({});setLoading(true);var options={method:'GET',headers:{'X-RapidAPI-Host':'community-open-weather-map.p.rapidapi.com','X-RapidAPI-Key':process.env.REACT_APP_API_KEY}};fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?units=\".concat(unit,\"&q=\").concat(uriEncodedCity),options).then(function(response){return response.json();}).then(function(response){if(response.cod!==200){throw new Error();}setResponseObj(response);setLoading(false);}).catch(function(err){setError(true);setLoading(false);console.log(err.message);});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Find Current Weather Conditions\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:getForecast,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter a city\",maxLength:\"50\",className:classes.textInput,value:city,onChange:function onChange(e){return setCity(e.target.value);}}),/*#__PURE__*/_jsxs(\"label\",{className:classes.Radio,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"imperial\",value:\"imperial\",onChange:function onChange(e){return setUnit(e.target.value);}}),\"Fahrenheit\"]}),/*#__PURE__*/_jsxs(\"label\",{className:classes.Radio,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"metric\",value:\"metric\",onChange:function onChange(e){return setUnit(e.target.value);}}),\"Celcius\"]}),\" \",/*#__PURE__*/_jsx(\"button\",{className:classes.Button,type:\"submit\",children:\"Get Forecast\"})]}),/*#__PURE__*/_jsx(Conditions,{responseObj:responseObj,error:error,loading:loading})]});};export default Forecast;","map":{"version":3,"names":["React","useState","Conditions","classes","Forecast","city","setCity","unit","setUnit","responseObj","setResponseObj","error","setError","loading","setLoading","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","length","options","method","headers","process","env","REACT_APP_API_KEY","fetch","then","response","json","cod","Error","catch","err","console","log","message","textInput","target","value","Radio","Button"],"sources":["C:/Users/Asus/Documents/GitHub/weather_app/src/components/Forecast/forecast.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Conditions from '../Conditions/conditions';\r\nimport classes from './forecast.module.css';\r\n\r\nconst Forecast = () => {\r\n    let [city, setCity] = useState('');\r\n    let [unit, setUnit] = useState('metric');\r\n    let [responseObj, setResponseObj] = useState({});\r\n    let [error, setError] = useState(false);\r\n    let [loading, setLoading] = useState(false);\r\n\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n\r\n    function getForecast(e) {\r\n        e.preventDefault();\r\n\r\n        if (city.length === 0) {\r\n            return setError(true)\r\n        }\r\n\r\n        setError(false);\r\n        setResponseObj({});\r\n        setLoading(true);\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com',\r\n                'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\r\n            }\r\n        };\r\n\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, options)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response.cod !== 200) {\r\n                    throw new Error()\r\n                }\r\n                setResponseObj(response);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n                setLoading(false);\r\n                console.log(err.message);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Find Current Weather Conditions</h2>\r\n            <form onSubmit={getForecast}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter a city\"\r\n                    maxLength=\"50\"\r\n                    className={classes.textInput}\r\n                    value={city}\r\n                    onChange={(e) =>\r\n                        setCity(e.target.value)}\r\n                />\r\n                <label className={classes.Radio}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"units\"\r\n                        checked={unit === \"imperial\"}\r\n                        value=\"imperial\"\r\n                        onChange={(e) =>\r\n                            setUnit(e.target.value)}\r\n                    />\r\n                    Fahrenheit\r\n                </label>\r\n                <label className={classes.Radio}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"units\"\r\n                        checked={unit === \"metric\"}\r\n                        value=\"metric\"\r\n                        onChange={(e) =>\r\n                            setUnit(e.target.value)}\r\n                    />\r\n                    Celcius\r\n                </label> <button className={classes.Button} type='submit'>Get Forecast</button>\r\n            </form>\r\n            <Conditions\r\n                responseObj={responseObj}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast;"],"mappings":"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"},"metadata":{},"sourceType":"module"}